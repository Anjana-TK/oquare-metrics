name: 'OQuaRE metrics calculation module'
description: 'Calculates the metrics of ontology files in the given folder based on the metrics set by the OQuaRE framework'
inputs:
  ontology-folders:
    description: 'Folders which contains .owl files'
    required: true
    default: 'ontologies'
  contents-folder:
    description: 'Folder which will contain results and archives'
    default: 'OQuaRE'
  reasoner:
    description: 'Reasoner used by OQuaRE framework'
    required: true
    default: 'ELK'
  ignore-files:
    description: 'Files to ignore when calculating metrics'
    default: ''
  category-plots:
    description: 'Indicates if you want category values plots'
    default: 'true'
  model-plot:
    description: 'Indicates if you want oquare model value plots'
    default: 'true'
  archive-plot:
    description: 'Indicates if you want oquare model value plot across the latest 20 versions'
    default: 'false'

runs: 
  using: 'composite'
  steps:
    - uses: actions/checkout@v2
      with:
          fetch-depth: 2
    - run: pip install -r $GITHUB_ACTION_PATH/requirements.txt
      shell: bash

    - name: Get changed files
      id: changed-files
      uses: tj-actions/changed-files@v18
      with:
        files_separator: ' '
        files_ignore_separator: ' '
        files: |
          ${{ join(inputs.ontology-folders, '/*.owl ') }}
        files_ignore: |
          ${{ inputs.ignore-files }}

    - name: Setup folders
      run: |
        mkdir -p ${{ inputs.contents-folder }} && mkdir -p ${{ inputs.contents-folder }}/results && mkdir -p ${{ inputs.contents-folder }}/archives \
        && mkdir -p ${{ inputs.contents-folder }}/temp_results

        for ontology_source in ${{ inputs.ontology_folders }}
        do
          mkdir -p ${{ inputs.contents-folder }}/temp_results/$ontology_source
        done
      shell: bash
    
    - name: Find and copy previous results
      if: steps.changed-files.outputs.any_modified == 'true'
      run: |
        if [ "$(ls -A ./${{ inputs.contents-folder }}/results)" ] 
        then 
          cp -r $(find ${{ inputs.contents-folder }}/results/* -maxdepth 0)/* ${{ inputs.contents-folder }}/temp_results
        fi
      shell: bash

    - name: Removes previous run plots 
      if: steps.changed-files.outputs.any_modified == 'true'
      run: |
        rm -f ${{ inputs.contents-folder }}/temp_results/OQuaRE_model_values_global.png
        rm -f ${{ inputs.contents-folder }}/temp_results/OQuaRE_model_values.png
        rm -f ${{ inputs.contents-folder }}/temp_results/README.md
      shell: bash

    - name: If file deleted, remove its folder from results
      if: steps.changed-files.outputs.any_deleted == 'true'
      run: |
        for file in ${{ steps.changed-files.outputs.deleted_files }}
        do
          dir=$(dirname "$file")
          deletedFile=$(basename "$file" .owl); 
          rm -rf ${{ inputs.contents-folder }}/temp_results/$dir/$deletedFile;
        done
      shell: bash

    - name: If file renamed, delete nonmatching folders on temporal folder
      if: steps.changed-files.outputs.renamed_files
      run: |
        for ontology_source in ${{ inputs.ontology_folders }}
        do
          comm -13 <(ls -1 ${ ontology_source } | sed s/.owl//g) <( ls -1 ${{ inputs.contents-folder}}/temp_results/$ontology_source) | \
          while read file
          do
            rm -rf ${{ inputs.contents-folder}}/temp_results/$ontology_source/$file;
          done
        done
      shell: bash

    - name: Checks if its the first run (results empty folder)
      if: steps.changed-files.outputs.any_modified == 'false'
      run: |
        if [ -z "$(ls -A ./${{ inputs.contents-folder }}/results)" ]
        then
          for ontology_source in ${{ inputs.ontology-folders }}
          do
            find ./$ontology_source -type f -maxdepth 1 -name "*.owl" | while read file
            do
              outputFile=$(basename "$file")
              if [ -z $(printf '%s\n' "${{ inputs.ignore-files }}" | grep -Fx $outputFile)]
              then
                outputFile=$(basename "$file" .owl) 
                mkdir -p ${{ inputs.contents-folder }}/temp_results/$ontology_source/$outputFile/metrics
                outputFilePath="${{ inputs.contents-folder }}/temp_results/$ontology_source/$outputFile/metrics/$outputFile.xml"
                java -jar $GITHUB_ACTION_PATH/libs/oquare-versions.jar --ontology "$file" --reasoner "${{ inputs.reasoner }}" --outputFile "$outputFilePath"
                
                if [ ${{ inputs.category-plots }} = "true" ]
                then
                  python $GITHUB_ACTION_PATH/scripts/main.py -i ${{ inputs.contents-folder }} -s "$ontology_source" -c -f "$outputFile" 
                fi
              fi
            done
          done

          if [ ${{ inputs.model-plot }} = "true" ]; then \
            python $GITHUB_ACTION_PATH/scripts/main.py -i ${{ inputs.contents-folder }} -m
          fi

          mv ${{ inputs.contents-folder }}/temp_results ${{ inputs.contents-folder }}/results/"$(date +%Y-%m-%d_%H-%M-%S)"
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add ${{ inputs.contents-folder }}/
          git commit -m "Ontology metrics calculated - OQuaRE"
          git push
        fi
      shell: bash

    - name: Call oquare library
      if: steps.changed-files.outputs.any_changed == 'true'
      run: |
        if [ -z "$(ls -A ./${{ inputs.contents-folder }}/results)" ]
        then
          for ontology_source in ${{ inputs.ontology-folders }}
          do
            find ./$ontology_source -type f -maxdepth 1 -name "*.owl" | while read file
            do
              outputFile=$(basename "$file")
              if [ -z $(printf '%s\n' "${{ inputs.ignore-files }}" | grep -Fx $outputFile)]
              then
                outputFile=$(basename "$file" .owl) 
                mkdir -p ${{ inputs.contents-folder }}/temp_results/$ontology_source/$outputFile/metrics
                outputFilePath="${{ inputs.contents-folder }}/temp_results/$ontology_source/$outputFile/metrics/$outputFile.xml"
                java -jar $GITHUB_ACTION_PATH/libs/oquare-versions.jar --ontology "$file" --reasoner "${{ inputs.reasoner }}" --outputFile "$outputFilePath"
                
                if [ ${{ inputs.category-plots }} = "true" ]
                then
                  python $GITHUB_ACTION_PATH/scripts/main.py -i ${{ inputs.contents-folder }} -s "$ontology_source" -c -f "$outputFile" 
                fi
              fi
            done
          done
        else
          for file in ${{ steps.changed-files.outputs.all_changed_files }}
          do
            dir=$(dirname "$file")
            outputFile=$(basename "$file" .owl)
            mkdir -p ${{ inputs.contents-folder }}/temp_results/$dir/$outputFile/metrics
            outputFilePath="${{ inputs.contents-folder }}/temp_results/$dir/$outputFile/metrics/$outputFile.xml"
            rm -f "$outputFilePath"
            rm -f "${{ inputs.contents-folder}}/temp_results/$dir/$outputFile/README.md"
            java -jar $GITHUB_ACTION_PATH/libs/oquare-versions.jar --ontology "$file" --reasoner "${{ inputs.reasoner }}" --outputFile "$outputFilePath"

            if [ ${{ inputs.category-plots }} = "true" ]; then \
              python $GITHUB_ACTION_PATH/scripts/main.py -i ${{ inputs.contents-folder }} -s "$dir" -c -f "$outputFile"
            fi
          done
        fi
      shell: bash
    
    - name: 'Evaluate and plot oquare model value'
      if: inputs.model-plot == 'true' && steps.changed-files.outputs.any_modified == 'true'
      run: python $GITHUB_ACTION_PATH/scripts/main.py -i ${{ inputs.contents-folder }} -m
      shell: bash
      
    - name: Archive previous results
      if: steps.changed-files.outputs.any_modified == 'true'
      run: |
        if [ "$(ls -A ./${{ inputs.contents-folder }}/results)" ] 
        then
          mv -v ${{ inputs.contents-folder }}/results/* ${{ inputs.contents-folder }}/archives/
        fi 
      shell: bash

    - name: Move results to results folder and tag it with a date
      if: steps.changed-files.outputs.any_modified == 'true'
      run: mv ${{ inputs.contents-folder }}/temp_results ${{ inputs.contents-folder }}/results/"$(date +%Y-%m-%d_%H-%M-%S)"
      shell: bash

    - name: 'Evaluate and plot historic'
      if: inputs.archive-plot == 'true' && steps.changed-files.outputs.any_modified == 'true'
      run: python $GITHUB_ACTION_PATH/scripts/main.py -i ${{ inputs.contents-folder }} -g
      shell: bash
      
      
    - name: Commit and push
      if: steps.changed-files.outputs.any_modified == 'true'
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com
        git add ${{ inputs.contents-folder }}/
        git commit -m "Ontology metrics calculated - OQuaRE"
        git push
      shell: bash


      
