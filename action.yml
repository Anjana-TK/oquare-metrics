name: 'OQuaRE metrics calculation module'
description: 'Calculates the metrics of ontology files in the given folder based on the metrics set by the OQuaRE framework'
inputs:
  ontology-folder:
    description: 'Folder which contains .owl files'
    required: true
    default: 'ontologies'
  contents-folder:
    description: 'Folder which will contain results and archives'
    default: 'OQuaRE'
  reasoner:
    description: 'Reasoner used by OQuaRE'
    required: true
    default: 'ELK'

runs: 
  using: 'composite'
  steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v2
      with:
        distribution: 'temurin'
        java-version: '8'
    - name: Get changed files
      id: changed-files
      uses: tj-actions/changed-files@v18
      with:
        path: ${{ inputs.ontology-folder }}
        files: |
          *.owl
    - name: Setup folders
      if: steps.changed-files.outputs.any_changed == 'true'
      run: |
        mkdir -p ${{ inputs.contents-folder }} && mkdir -p ${{ inputs.contents-folder }}/results && mkdir -p ${{ inputs.contents-folder }}/archives \
        && mkdir -p ${{ inputs.contents-folder }}/temp_results
      shell: bash
    - name: Call oquare library
      if: steps.changed-files.outputs.any_changed == 'true'
      run: |
        for file in ${{ steps.changed-files.outputs.all_changed_files }}; do \
          outputFile=$(basename "$file" .owl); \
          mkdir -p ${{ inputs.contents-folder }}/temp_results/${outputFile}/metrics; \
          outputFile="${{ inputs.contents-folder }}/temp_results/${outputFile}/metrics/${outputFile}.xml"; \
          java -jar libs/oquare-versions.jar --ontology "$file" --reasoner "${{ inputs.reasoner }}" --outputFile "$outputFile"; \
        done
      shell: bash
    - name: Archive previous results
      if: steps.changed-files.outputs.any_changed == 'true'
      run: |
        touch ${{ inputs.contents-folder }}/results/temp_file \
        && mv -v ${{ inputs.contents-folder }}/results/* ${{ inputs.contents-folder }}/archives/ \
        && rm -f ${{ inputs.contents-folder }}/archives/temp_file
      shell: bash
    - name: Move results to results folder and tag it with a date
      if: steps.changed-files.outputs.any_changed == 'true'
      run: mv ${{ inputs.contents-folder }}/temp_results ${{ inputs.contents-folder }}/results/"$(date +%d-%m-%Y_%H-%M-%S)"
      shell: bash
    - name: Commit and push
      uses: EndBug/add-and-commit@v8